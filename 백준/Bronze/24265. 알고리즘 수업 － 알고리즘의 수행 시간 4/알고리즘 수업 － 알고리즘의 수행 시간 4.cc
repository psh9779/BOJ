// 문제에 주어진 MenOfPassion 알고리즘에서 "# 코드1"은 n-1 + n-2 + .. + 1 == n*(n-1)/2회 수행된다.
// O(n)은 n에 비례하는 "수행 횟수"를 나타내는 표기법.
// 즉 시간복잡도는 O(n^2)이며, 수행 횟수를 다항식으로 나타내었을 때 최고차항의 차수는 2이다. (빅오 표기 시, 상수 및 낮은 차수는 무시하여 표현)

#include <iostream>
using namespace std;

int main() {
	long long n;    // 1 <= n(입력 값) <= 500,000. 최악의 경우 n*(n-1)/2의 값은 약 1조2천억 (int 범위를 벗어남)
	cin >> n;
	cout << n*(n-1)/2 << '\n';    // 코드1의 수행횟수는 n*(n-1)/2회
	cout << "2\n";    // 수행 횟수를 다항식으로 나타내었을 때, 최고차항의 차수는 2

	return 0;
}